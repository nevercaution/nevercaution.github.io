{"componentChunkName":"component---src-templates-tag-list-index-js","path":"/tags/orm/","webpackCompilationHash":"a60ca9e66411e79bd9e8","result":{"data":{"allMarkdownRemark":{"group":[{"fieldValue":"ajax","totalCount":1,"edges":[{"node":{"excerpt":"View에서 get, post요청을 할 때 template단에서 ajax요청을 날려야할 때가 있다.\nAPIVIew, View 두개의 경우를 살펴보자.\n1.APIView ↔ ajax (post, get)\n(post의 케이스로 설명을 하였지만 get…","fields":{"slug":"/django-ajax/"},"frontmatter":{"date":"2016년 03월 27일","title":"Django에서 ajax요청하기","tags":["django","ajax"]}}}]},{"fieldValue":"android","totalCount":1,"edges":[{"node":{"excerpt":"Django framework…","fields":{"slug":"/store-inapp-in-python/"},"frontmatter":{"date":"2016년 03월 11일","title":"Python에서 iOS, Android 스토어 인앱 결제 검증하기","tags":["python","ios","android","inapp"]}}}]},{"fieldValue":"annotation","totalCount":1,"edges":[{"node":{"excerpt":"썰의 시작 회사에서 msa…","fields":{"slug":"/spring-boot-custom-annotation/"},"frontmatter":{"date":"2018년 04월 15일","title":"Spring boot Custom Annotation 사용하기","tags":["springboot","annotation","argumentresolver"]}}}]},{"fieldValue":"api-gateway","totalCount":1,"edges":[{"node":{"excerpt":"api gatway 를 도입했다. 레거시 프로젝트를 정리하면서 msa 구조로 가게 되었고 필요에 따라 서비스들이 나뉘고 있어서 이를 한곳에서 관리해줄 필요가 있었다. 구조를 설계하면서 어느 레벨까지를 gateway…","fields":{"slug":"/api-gateway-with-zuul/"},"frontmatter":{"date":"2018년 10월 23일","title":"API Gateway 구축하기 - Spring Cloud Zuul","tags":["netflix-zuul","springboot","spring-cloud","api-gateway"]}}}]},{"fieldValue":"argumentresolver","totalCount":1,"edges":[{"node":{"excerpt":"썰의 시작 회사에서 msa…","fields":{"slug":"/spring-boot-custom-annotation/"},"frontmatter":{"date":"2018년 04월 15일","title":"Spring boot Custom Annotation 사용하기","tags":["springboot","annotation","argumentresolver"]}}}]},{"fieldValue":"aspect","totalCount":1,"edges":[{"node":{"excerpt":"왜 만들었냐면.. 이미 spring 에서 제공하는 @Cacheable 이 있다. 기능도 다양하고 Spel 를 제공해서 좀 더 동적으로 캐싱을 할 수 있다. 캐싱을 받아주는 구현체만 추가해주면 되는데 redis 의 경우엔 spring-data-redis…","fields":{"slug":"/redis-cache-annotation-with-aspect/"},"frontmatter":{"date":"2019년 02월 03일","title":"redis cache 를 @annotation 으로 하기 (with @Aspect)","tags":["springboot","redis","jedis","customannotation","aspect","gradle"]}}}]},{"fieldValue":"async","totalCount":1,"edges":[{"node":{"excerpt":"Retrofit 을 사용기 전에 REST 호출을 해야할 때 보통 spring 에서 기본적으로 제공해주는 RestTemplate 을 사용했었다. 간단하게 사용할 수 있고  내부에 포함되어 있어 다른 의존성이 없어도 된다. 제공되는 method…","fields":{"slug":"/retrofit-with-spring-boot/"},"frontmatter":{"date":"2018년 12월 29일","title":"spring boot 에서 Retrofit 사용해보기","tags":["springboot","retrofit2","okhttp3","async"]}}}]},{"fieldValue":"autoconfigure","totalCount":1,"edges":[{"node":{"excerpt":"spring boot starter…","fields":{"slug":"/spring-boot-starter-custom/"},"frontmatter":{"date":"2019년 10월 02일","title":"Spring Boot Starter Customize 하기","tags":["springboot","maven","spring","autoconfigure","boot","custom"]}}}]},{"fieldValue":"boot","totalCount":1,"edges":[{"node":{"excerpt":"spring boot starter…","fields":{"slug":"/spring-boot-starter-custom/"},"frontmatter":{"date":"2019년 10월 02일","title":"Spring Boot Starter Customize 하기","tags":["springboot","maven","spring","autoconfigure","boot","custom"]}}}]},{"fieldValue":"custom","totalCount":1,"edges":[{"node":{"excerpt":"spring boot starter…","fields":{"slug":"/spring-boot-starter-custom/"},"frontmatter":{"date":"2019년 10월 02일","title":"Spring Boot Starter Customize 하기","tags":["springboot","maven","spring","autoconfigure","boot","custom"]}}}]},{"fieldValue":"customannotation","totalCount":1,"edges":[{"node":{"excerpt":"왜 만들었냐면.. 이미 spring 에서 제공하는 @Cacheable 이 있다. 기능도 다양하고 Spel 를 제공해서 좀 더 동적으로 캐싱을 할 수 있다. 캐싱을 받아주는 구현체만 추가해주면 되는데 redis 의 경우엔 spring-data-redis…","fields":{"slug":"/redis-cache-annotation-with-aspect/"},"frontmatter":{"date":"2019년 02월 03일","title":"redis cache 를 @annotation 으로 하기 (with @Aspect)","tags":["springboot","redis","jedis","customannotation","aspect","gradle"]}}}]},{"fieldValue":"django","totalCount":3,"edges":[{"node":{"excerpt":"View에서 get, post요청을 할 때 template단에서 ajax요청을 날려야할 때가 있다.\nAPIVIew, View 두개의 경우를 살펴보자.\n1.APIView ↔ ajax (post, get)\n(post의 케이스로 설명을 하였지만 get…","fields":{"slug":"/django-ajax/"},"frontmatter":{"date":"2016년 03월 27일","title":"Django에서 ajax요청하기","tags":["django","ajax"]}}},{"node":{"excerpt":"필요에 의해서 배치 작업을 만들어야 했다.\n간단하게 python으로 만들까 했는데, 단순 cursor로 사용하지 않고 django orm 으로 만들어 보고 싶은 생각이 들었다.\n이미 작업하고 있는 django project…","fields":{"slug":"/django-orm-standalone/"},"frontmatter":{"date":"2017년 06월 23일","title":"Django orm standalone feat(docker)","tags":["python","django","orm","docker"]}}},{"node":{"excerpt":"회사에서 필요에 의해 Single Sign On을 구현해야 할 일이 있었다. 3개의 독립된 사이트가 있었고, 각자 로그인을 따로 해야 한다는 점이 사용자 입장에서는 번거로운 일이 될 수 있다는 이유에서 였다.…","fields":{"slug":"/django-sso/"},"frontmatter":{"date":"2016년 05월 06일","title":"Django에서 SSO하기","tags":["django","sso"]}}}]},{"fieldValue":"docker","totalCount":1,"edges":[{"node":{"excerpt":"필요에 의해서 배치 작업을 만들어야 했다.\n간단하게 python으로 만들까 했는데, 단순 cursor로 사용하지 않고 django orm 으로 만들어 보고 싶은 생각이 들었다.\n이미 작업하고 있는 django project…","fields":{"slug":"/django-orm-standalone/"},"frontmatter":{"date":"2017년 06월 23일","title":"Django orm standalone feat(docker)","tags":["python","django","orm","docker"]}}}]},{"fieldValue":"dynamicConfiguration","totalCount":1,"edges":[{"node":{"excerpt":"배포없이 설정값을 변경해야하는 일이 생겼다. 설정값 하나 때문에 전체 api…","fields":{"slug":"/spring-boot-redis-pub-sub/"},"frontmatter":{"date":"2018년 07월 16일","title":"spring boot 에서 redis pub/sub 을 이용해 동적으로 value 사용하기","tags":["redis","pubsub","springboot","dynamicConfiguration","lettuce"]}}}]},{"fieldValue":"elasticsearch","totalCount":3,"edges":[{"node":{"excerpt":"elasticsearch 버전을 올려야 한다. 검색 서비스를 개선하면서 사내에서 elasticsearch 를 사용하고 있다.\n처음에 사용했던 버전은 개발 당시의 가장 최근 버전인 elasticsearch 5.1.1 버전이다.\nspring boot…","fields":{"slug":"/elasticsearch-rest-client/"},"frontmatter":{"date":"2018년 03월 15일","title":"Spring-boot 에서 Elasticsearch java rest client 사용하기","tags":["springboot","elasticsearch","restclient","javaclient","transportlyer"]}}},{"node":{"excerpt":"elasticsearch & spring boot & webflux elasticsearch 6.3.0 elasticsearch 가 6.3.0  으로 올라갔다. 여러가지 기능들이 추가되었는데, 흥미로운 부분은 내부 client 로 SQL…","fields":{"slug":"/elasticsearch-java-high-level-client/"},"frontmatter":{"date":"2018년 06월 17일","title":"Elasticsearch Java Rest High Level Client 사용하기","tags":["elasticsearch","resthighlevelclient","springboot","webflux","gradle"]}}},{"node":{"excerpt":"elasticsearch 의 검색을 사용하기 까지 사내에서 elasticsearch 를 처음 사용하면서 로그 수집정도에만 사용하고 있었다. 워낙에 elk…","fields":{"slug":"/elasticsearch-with-kakaopage/"},"frontmatter":{"date":"2018년 04월 29일","title":"카카오페이지 검색 개발 후기","tags":["kakaopage","elasticsearch","은전한닢"]}}}]},{"fieldValue":"freemarker","totalCount":1,"edges":[{"node":{"excerpt":"view를 추가해야한다. spring 을 사용하다가 spring boot 로 넘어오면서 front, back 을 나누어서 백단은 나름 Restful 하게 해서 api 콜만 처리하는 방식으로 변경하는 중이다.(front 는 react…","fields":{"slug":"/spring-boot-jsp/"},"frontmatter":{"date":"2018년 02월 22일","title":"spring boot 에서 jsp view 만들기 (feat freemarker)","tags":["springboot","jsp","freemarker","gradle"]}}}]},{"fieldValue":"gradle","totalCount":5,"edges":[{"node":{"excerpt":"elasticsearch & spring boot & webflux elasticsearch 6.3.0 elasticsearch 가 6.3.0  으로 올라갔다. 여러가지 기능들이 추가되었는데, 흥미로운 부분은 내부 client 로 SQL…","fields":{"slug":"/elasticsearch-java-high-level-client/"},"frontmatter":{"date":"2018년 06월 17일","title":"Elasticsearch Java Rest High Level Client 사용하기","tags":["elasticsearch","resthighlevelclient","springboot","webflux","gradle"]}}},{"node":{"excerpt":"왜 만들었냐면.. 이미 spring 에서 제공하는 @Cacheable 이 있다. 기능도 다양하고 Spel 를 제공해서 좀 더 동적으로 캐싱을 할 수 있다. 캐싱을 받아주는 구현체만 추가해주면 되는데 redis 의 경우엔 spring-data-redis…","fields":{"slug":"/redis-cache-annotation-with-aspect/"},"frontmatter":{"date":"2019년 02월 03일","title":"redis cache 를 @annotation 으로 하기 (with @Aspect)","tags":["springboot","redis","jedis","customannotation","aspect","gradle"]}}},{"node":{"excerpt":"view를 추가해야한다. spring 을 사용하다가 spring boot 로 넘어오면서 front, back 을 나누어서 백단은 나름 Restful 하게 해서 api 콜만 처리하는 방식으로 변경하는 중이다.(front 는 react…","fields":{"slug":"/spring-boot-jsp/"},"frontmatter":{"date":"2018년 02월 22일","title":"spring boot 에서 jsp view 만들기 (feat freemarker)","tags":["springboot","jsp","freemarker","gradle"]}}},{"node":{"excerpt":"지금 dev 서버에 배포되어 있는 서버 버전이 몇인가요? 회사에 서버환경은 dev, sandbox, test, beta, alpha, real 으로 나뉘어 있다. 각 단계별로 기능 테스트를 하고 QA를 통해 모든 기능이 개발 완료 되고 QA…","fields":{"slug":"/spring-boot-actuator/"},"frontmatter":{"date":"2018년 03월 24일","title":"Spring Boot Actuator 를 이용해 버전 정보 제공하기","tags":["springboot","gradle","spring-boot-actuator"]}}},{"node":{"excerpt":"…","fields":{"slug":"/spring-boot-use-gradle-value/"},"frontmatter":{"date":"2018년 05월 20일","title":"Spring boot 에서 gradle 에 정의되어있는 정보 가져오기","tags":["gradle","springboot","logging"]}}}]},{"fieldValue":"inapp","totalCount":1,"edges":[{"node":{"excerpt":"Django framework…","fields":{"slug":"/store-inapp-in-python/"},"frontmatter":{"date":"2016년 03월 11일","title":"Python에서 iOS, Android 스토어 인앱 결제 검증하기","tags":["python","ios","android","inapp"]}}}]},{"fieldValue":"ios","totalCount":1,"edges":[{"node":{"excerpt":"Django framework…","fields":{"slug":"/store-inapp-in-python/"},"frontmatter":{"date":"2016년 03월 11일","title":"Python에서 iOS, Android 스토어 인앱 결제 검증하기","tags":["python","ios","android","inapp"]}}}]},{"fieldValue":"javaclient","totalCount":1,"edges":[{"node":{"excerpt":"elasticsearch 버전을 올려야 한다. 검색 서비스를 개선하면서 사내에서 elasticsearch 를 사용하고 있다.\n처음에 사용했던 버전은 개발 당시의 가장 최근 버전인 elasticsearch 5.1.1 버전이다.\nspring boot…","fields":{"slug":"/elasticsearch-rest-client/"},"frontmatter":{"date":"2018년 03월 15일","title":"Spring-boot 에서 Elasticsearch java rest client 사용하기","tags":["springboot","elasticsearch","restclient","javaclient","transportlyer"]}}}]},{"fieldValue":"jedis","totalCount":1,"edges":[{"node":{"excerpt":"왜 만들었냐면.. 이미 spring 에서 제공하는 @Cacheable 이 있다. 기능도 다양하고 Spel 를 제공해서 좀 더 동적으로 캐싱을 할 수 있다. 캐싱을 받아주는 구현체만 추가해주면 되는데 redis 의 경우엔 spring-data-redis…","fields":{"slug":"/redis-cache-annotation-with-aspect/"},"frontmatter":{"date":"2019년 02월 03일","title":"redis cache 를 @annotation 으로 하기 (with @Aspect)","tags":["springboot","redis","jedis","customannotation","aspect","gradle"]}}}]},{"fieldValue":"jsp","totalCount":1,"edges":[{"node":{"excerpt":"view를 추가해야한다. spring 을 사용하다가 spring boot 로 넘어오면서 front, back 을 나누어서 백단은 나름 Restful 하게 해서 api 콜만 처리하는 방식으로 변경하는 중이다.(front 는 react…","fields":{"slug":"/spring-boot-jsp/"},"frontmatter":{"date":"2018년 02월 22일","title":"spring boot 에서 jsp view 만들기 (feat freemarker)","tags":["springboot","jsp","freemarker","gradle"]}}}]},{"fieldValue":"kakaopage","totalCount":1,"edges":[{"node":{"excerpt":"elasticsearch 의 검색을 사용하기 까지 사내에서 elasticsearch 를 처음 사용하면서 로그 수집정도에만 사용하고 있었다. 워낙에 elk…","fields":{"slug":"/elasticsearch-with-kakaopage/"},"frontmatter":{"date":"2018년 04월 29일","title":"카카오페이지 검색 개발 후기","tags":["kakaopage","elasticsearch","은전한닢"]}}}]},{"fieldValue":"lettuce","totalCount":1,"edges":[{"node":{"excerpt":"배포없이 설정값을 변경해야하는 일이 생겼다. 설정값 하나 때문에 전체 api…","fields":{"slug":"/spring-boot-redis-pub-sub/"},"frontmatter":{"date":"2018년 07월 16일","title":"spring boot 에서 redis pub/sub 을 이용해 동적으로 value 사용하기","tags":["redis","pubsub","springboot","dynamicConfiguration","lettuce"]}}}]},{"fieldValue":"logging","totalCount":1,"edges":[{"node":{"excerpt":"…","fields":{"slug":"/spring-boot-use-gradle-value/"},"frontmatter":{"date":"2018년 05월 20일","title":"Spring boot 에서 gradle 에 정의되어있는 정보 가져오기","tags":["gradle","springboot","logging"]}}}]},{"fieldValue":"maven","totalCount":1,"edges":[{"node":{"excerpt":"spring boot starter…","fields":{"slug":"/spring-boot-starter-custom/"},"frontmatter":{"date":"2019년 10월 02일","title":"Spring Boot Starter Customize 하기","tags":["springboot","maven","spring","autoconfigure","boot","custom"]}}}]},{"fieldValue":"netflix-zuul","totalCount":1,"edges":[{"node":{"excerpt":"api gatway 를 도입했다. 레거시 프로젝트를 정리하면서 msa 구조로 가게 되었고 필요에 따라 서비스들이 나뉘고 있어서 이를 한곳에서 관리해줄 필요가 있었다. 구조를 설계하면서 어느 레벨까지를 gateway…","fields":{"slug":"/api-gateway-with-zuul/"},"frontmatter":{"date":"2018년 10월 23일","title":"API Gateway 구축하기 - Spring Cloud Zuul","tags":["netflix-zuul","springboot","spring-cloud","api-gateway"]}}}]},{"fieldValue":"okhttp3","totalCount":1,"edges":[{"node":{"excerpt":"Retrofit 을 사용기 전에 REST 호출을 해야할 때 보통 spring 에서 기본적으로 제공해주는 RestTemplate 을 사용했었다. 간단하게 사용할 수 있고  내부에 포함되어 있어 다른 의존성이 없어도 된다. 제공되는 method…","fields":{"slug":"/retrofit-with-spring-boot/"},"frontmatter":{"date":"2018년 12월 29일","title":"spring boot 에서 Retrofit 사용해보기","tags":["springboot","retrofit2","okhttp3","async"]}}}]},{"fieldValue":"orm","totalCount":1,"edges":[{"node":{"excerpt":"필요에 의해서 배치 작업을 만들어야 했다.\n간단하게 python으로 만들까 했는데, 단순 cursor로 사용하지 않고 django orm 으로 만들어 보고 싶은 생각이 들었다.\n이미 작업하고 있는 django project…","fields":{"slug":"/django-orm-standalone/"},"frontmatter":{"date":"2017년 06월 23일","title":"Django orm standalone feat(docker)","tags":["python","django","orm","docker"]}}}]},{"fieldValue":"pubsub","totalCount":1,"edges":[{"node":{"excerpt":"배포없이 설정값을 변경해야하는 일이 생겼다. 설정값 하나 때문에 전체 api…","fields":{"slug":"/spring-boot-redis-pub-sub/"},"frontmatter":{"date":"2018년 07월 16일","title":"spring boot 에서 redis pub/sub 을 이용해 동적으로 value 사용하기","tags":["redis","pubsub","springboot","dynamicConfiguration","lettuce"]}}}]},{"fieldValue":"python","totalCount":2,"edges":[{"node":{"excerpt":"필요에 의해서 배치 작업을 만들어야 했다.\n간단하게 python으로 만들까 했는데, 단순 cursor로 사용하지 않고 django orm 으로 만들어 보고 싶은 생각이 들었다.\n이미 작업하고 있는 django project…","fields":{"slug":"/django-orm-standalone/"},"frontmatter":{"date":"2017년 06월 23일","title":"Django orm standalone feat(docker)","tags":["python","django","orm","docker"]}}},{"node":{"excerpt":"Django framework…","fields":{"slug":"/store-inapp-in-python/"},"frontmatter":{"date":"2016년 03월 11일","title":"Python에서 iOS, Android 스토어 인앱 결제 검증하기","tags":["python","ios","android","inapp"]}}}]},{"fieldValue":"redis","totalCount":2,"edges":[{"node":{"excerpt":"왜 만들었냐면.. 이미 spring 에서 제공하는 @Cacheable 이 있다. 기능도 다양하고 Spel 를 제공해서 좀 더 동적으로 캐싱을 할 수 있다. 캐싱을 받아주는 구현체만 추가해주면 되는데 redis 의 경우엔 spring-data-redis…","fields":{"slug":"/redis-cache-annotation-with-aspect/"},"frontmatter":{"date":"2019년 02월 03일","title":"redis cache 를 @annotation 으로 하기 (with @Aspect)","tags":["springboot","redis","jedis","customannotation","aspect","gradle"]}}},{"node":{"excerpt":"배포없이 설정값을 변경해야하는 일이 생겼다. 설정값 하나 때문에 전체 api…","fields":{"slug":"/spring-boot-redis-pub-sub/"},"frontmatter":{"date":"2018년 07월 16일","title":"spring boot 에서 redis pub/sub 을 이용해 동적으로 value 사용하기","tags":["redis","pubsub","springboot","dynamicConfiguration","lettuce"]}}}]},{"fieldValue":"restclient","totalCount":1,"edges":[{"node":{"excerpt":"elasticsearch 버전을 올려야 한다. 검색 서비스를 개선하면서 사내에서 elasticsearch 를 사용하고 있다.\n처음에 사용했던 버전은 개발 당시의 가장 최근 버전인 elasticsearch 5.1.1 버전이다.\nspring boot…","fields":{"slug":"/elasticsearch-rest-client/"},"frontmatter":{"date":"2018년 03월 15일","title":"Spring-boot 에서 Elasticsearch java rest client 사용하기","tags":["springboot","elasticsearch","restclient","javaclient","transportlyer"]}}}]},{"fieldValue":"resthighlevelclient","totalCount":1,"edges":[{"node":{"excerpt":"elasticsearch & spring boot & webflux elasticsearch 6.3.0 elasticsearch 가 6.3.0  으로 올라갔다. 여러가지 기능들이 추가되었는데, 흥미로운 부분은 내부 client 로 SQL…","fields":{"slug":"/elasticsearch-java-high-level-client/"},"frontmatter":{"date":"2018년 06월 17일","title":"Elasticsearch Java Rest High Level Client 사용하기","tags":["elasticsearch","resthighlevelclient","springboot","webflux","gradle"]}}}]},{"fieldValue":"retrofit2","totalCount":1,"edges":[{"node":{"excerpt":"Retrofit 을 사용기 전에 REST 호출을 해야할 때 보통 spring 에서 기본적으로 제공해주는 RestTemplate 을 사용했었다. 간단하게 사용할 수 있고  내부에 포함되어 있어 다른 의존성이 없어도 된다. 제공되는 method…","fields":{"slug":"/retrofit-with-spring-boot/"},"frontmatter":{"date":"2018년 12월 29일","title":"spring boot 에서 Retrofit 사용해보기","tags":["springboot","retrofit2","okhttp3","async"]}}}]},{"fieldValue":"spring","totalCount":1,"edges":[{"node":{"excerpt":"spring boot starter…","fields":{"slug":"/spring-boot-starter-custom/"},"frontmatter":{"date":"2019년 10월 02일","title":"Spring Boot Starter Customize 하기","tags":["springboot","maven","spring","autoconfigure","boot","custom"]}}}]},{"fieldValue":"spring-boot-actuator","totalCount":1,"edges":[{"node":{"excerpt":"지금 dev 서버에 배포되어 있는 서버 버전이 몇인가요? 회사에 서버환경은 dev, sandbox, test, beta, alpha, real 으로 나뉘어 있다. 각 단계별로 기능 테스트를 하고 QA를 통해 모든 기능이 개발 완료 되고 QA…","fields":{"slug":"/spring-boot-actuator/"},"frontmatter":{"date":"2018년 03월 24일","title":"Spring Boot Actuator 를 이용해 버전 정보 제공하기","tags":["springboot","gradle","spring-boot-actuator"]}}}]},{"fieldValue":"spring-cloud","totalCount":1,"edges":[{"node":{"excerpt":"api gatway 를 도입했다. 레거시 프로젝트를 정리하면서 msa 구조로 가게 되었고 필요에 따라 서비스들이 나뉘고 있어서 이를 한곳에서 관리해줄 필요가 있었다. 구조를 설계하면서 어느 레벨까지를 gateway…","fields":{"slug":"/api-gateway-with-zuul/"},"frontmatter":{"date":"2018년 10월 23일","title":"API Gateway 구축하기 - Spring Cloud Zuul","tags":["netflix-zuul","springboot","spring-cloud","api-gateway"]}}}]},{"fieldValue":"springboot","totalCount":11,"edges":[{"node":{"excerpt":"api gatway 를 도입했다. 레거시 프로젝트를 정리하면서 msa 구조로 가게 되었고 필요에 따라 서비스들이 나뉘고 있어서 이를 한곳에서 관리해줄 필요가 있었다. 구조를 설계하면서 어느 레벨까지를 gateway…","fields":{"slug":"/api-gateway-with-zuul/"},"frontmatter":{"date":"2018년 10월 23일","title":"API Gateway 구축하기 - Spring Cloud Zuul","tags":["netflix-zuul","springboot","spring-cloud","api-gateway"]}}},{"node":{"excerpt":"elasticsearch 버전을 올려야 한다. 검색 서비스를 개선하면서 사내에서 elasticsearch 를 사용하고 있다.\n처음에 사용했던 버전은 개발 당시의 가장 최근 버전인 elasticsearch 5.1.1 버전이다.\nspring boot…","fields":{"slug":"/elasticsearch-rest-client/"},"frontmatter":{"date":"2018년 03월 15일","title":"Spring-boot 에서 Elasticsearch java rest client 사용하기","tags":["springboot","elasticsearch","restclient","javaclient","transportlyer"]}}},{"node":{"excerpt":"elasticsearch & spring boot & webflux elasticsearch 6.3.0 elasticsearch 가 6.3.0  으로 올라갔다. 여러가지 기능들이 추가되었는데, 흥미로운 부분은 내부 client 로 SQL…","fields":{"slug":"/elasticsearch-java-high-level-client/"},"frontmatter":{"date":"2018년 06월 17일","title":"Elasticsearch Java Rest High Level Client 사용하기","tags":["elasticsearch","resthighlevelclient","springboot","webflux","gradle"]}}},{"node":{"excerpt":"왜 만들었냐면.. 이미 spring 에서 제공하는 @Cacheable 이 있다. 기능도 다양하고 Spel 를 제공해서 좀 더 동적으로 캐싱을 할 수 있다. 캐싱을 받아주는 구현체만 추가해주면 되는데 redis 의 경우엔 spring-data-redis…","fields":{"slug":"/redis-cache-annotation-with-aspect/"},"frontmatter":{"date":"2019년 02월 03일","title":"redis cache 를 @annotation 으로 하기 (with @Aspect)","tags":["springboot","redis","jedis","customannotation","aspect","gradle"]}}},{"node":{"excerpt":"Retrofit 을 사용기 전에 REST 호출을 해야할 때 보통 spring 에서 기본적으로 제공해주는 RestTemplate 을 사용했었다. 간단하게 사용할 수 있고  내부에 포함되어 있어 다른 의존성이 없어도 된다. 제공되는 method…","fields":{"slug":"/retrofit-with-spring-boot/"},"frontmatter":{"date":"2018년 12월 29일","title":"spring boot 에서 Retrofit 사용해보기","tags":["springboot","retrofit2","okhttp3","async"]}}},{"node":{"excerpt":"썰의 시작 회사에서 msa…","fields":{"slug":"/spring-boot-custom-annotation/"},"frontmatter":{"date":"2018년 04월 15일","title":"Spring boot Custom Annotation 사용하기","tags":["springboot","annotation","argumentresolver"]}}},{"node":{"excerpt":"view를 추가해야한다. spring 을 사용하다가 spring boot 로 넘어오면서 front, back 을 나누어서 백단은 나름 Restful 하게 해서 api 콜만 처리하는 방식으로 변경하는 중이다.(front 는 react…","fields":{"slug":"/spring-boot-jsp/"},"frontmatter":{"date":"2018년 02월 22일","title":"spring boot 에서 jsp view 만들기 (feat freemarker)","tags":["springboot","jsp","freemarker","gradle"]}}},{"node":{"excerpt":"지금 dev 서버에 배포되어 있는 서버 버전이 몇인가요? 회사에 서버환경은 dev, sandbox, test, beta, alpha, real 으로 나뉘어 있다. 각 단계별로 기능 테스트를 하고 QA를 통해 모든 기능이 개발 완료 되고 QA…","fields":{"slug":"/spring-boot-actuator/"},"frontmatter":{"date":"2018년 03월 24일","title":"Spring Boot Actuator 를 이용해 버전 정보 제공하기","tags":["springboot","gradle","spring-boot-actuator"]}}},{"node":{"excerpt":"배포없이 설정값을 변경해야하는 일이 생겼다. 설정값 하나 때문에 전체 api…","fields":{"slug":"/spring-boot-redis-pub-sub/"},"frontmatter":{"date":"2018년 07월 16일","title":"spring boot 에서 redis pub/sub 을 이용해 동적으로 value 사용하기","tags":["redis","pubsub","springboot","dynamicConfiguration","lettuce"]}}},{"node":{"excerpt":"spring boot starter…","fields":{"slug":"/spring-boot-starter-custom/"},"frontmatter":{"date":"2019년 10월 02일","title":"Spring Boot Starter Customize 하기","tags":["springboot","maven","spring","autoconfigure","boot","custom"]}}},{"node":{"excerpt":"…","fields":{"slug":"/spring-boot-use-gradle-value/"},"frontmatter":{"date":"2018년 05월 20일","title":"Spring boot 에서 gradle 에 정의되어있는 정보 가져오기","tags":["gradle","springboot","logging"]}}}]},{"fieldValue":"sso","totalCount":1,"edges":[{"node":{"excerpt":"회사에서 필요에 의해 Single Sign On을 구현해야 할 일이 있었다. 3개의 독립된 사이트가 있었고, 각자 로그인을 따로 해야 한다는 점이 사용자 입장에서는 번거로운 일이 될 수 있다는 이유에서 였다.…","fields":{"slug":"/django-sso/"},"frontmatter":{"date":"2016년 05월 06일","title":"Django에서 SSO하기","tags":["django","sso"]}}}]},{"fieldValue":"transportlyer","totalCount":1,"edges":[{"node":{"excerpt":"elasticsearch 버전을 올려야 한다. 검색 서비스를 개선하면서 사내에서 elasticsearch 를 사용하고 있다.\n처음에 사용했던 버전은 개발 당시의 가장 최근 버전인 elasticsearch 5.1.1 버전이다.\nspring boot…","fields":{"slug":"/elasticsearch-rest-client/"},"frontmatter":{"date":"2018년 03월 15일","title":"Spring-boot 에서 Elasticsearch java rest client 사용하기","tags":["springboot","elasticsearch","restclient","javaclient","transportlyer"]}}}]},{"fieldValue":"webflux","totalCount":1,"edges":[{"node":{"excerpt":"elasticsearch & spring boot & webflux elasticsearch 6.3.0 elasticsearch 가 6.3.0  으로 올라갔다. 여러가지 기능들이 추가되었는데, 흥미로운 부분은 내부 client 로 SQL…","fields":{"slug":"/elasticsearch-java-high-level-client/"},"frontmatter":{"date":"2018년 06월 17일","title":"Elasticsearch Java Rest High Level Client 사용하기","tags":["elasticsearch","resthighlevelclient","springboot","webflux","gradle"]}}}]},{"fieldValue":"은전한닢","totalCount":1,"edges":[{"node":{"excerpt":"elasticsearch 의 검색을 사용하기 까지 사내에서 elasticsearch 를 처음 사용하면서 로그 수집정도에만 사용하고 있었다. 워낙에 elk…","fields":{"slug":"/elasticsearch-with-kakaopage/"},"frontmatter":{"date":"2018년 04월 29일","title":"카카오페이지 검색 개발 후기","tags":["kakaopage","elasticsearch","은전한닢"]}}}]}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tag":"orm","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/spring-boot-starter-custom/"},"frontmatter":{"title":"Spring Boot Starter Customize 하기","tags":["springboot","maven","spring","autoconfigure","boot","custom"],"published":true}}},{"node":{"fields":{"slug":"/redis-cache-annotation-with-aspect/"},"frontmatter":{"title":"redis cache 를 @annotation 으로 하기 (with @Aspect)","tags":["springboot","redis","jedis","customannotation","aspect","gradle"],"published":true}}},{"node":{"fields":{"slug":"/retrofit-with-spring-boot/"},"frontmatter":{"title":"spring boot 에서 Retrofit 사용해보기","tags":["springboot","retrofit2","okhttp3","async"],"published":true}}},{"node":{"fields":{"slug":"/api-gateway-with-zuul/"},"frontmatter":{"title":"API Gateway 구축하기 - Spring Cloud Zuul","tags":["netflix-zuul","springboot","spring-cloud","api-gateway"],"published":true}}},{"node":{"fields":{"slug":"/spring-boot-redis-pub-sub/"},"frontmatter":{"title":"spring boot 에서 redis pub/sub 을 이용해 동적으로 value 사용하기","tags":["redis","pubsub","springboot","dynamicConfiguration","lettuce"],"published":true}}},{"node":{"fields":{"slug":"/elasticsearch-java-high-level-client/"},"frontmatter":{"title":"Elasticsearch Java Rest High Level Client 사용하기","tags":["elasticsearch","resthighlevelclient","springboot","webflux","gradle"],"published":true}}},{"node":{"fields":{"slug":"/spring-boot-use-gradle-value/"},"frontmatter":{"title":"Spring boot 에서 gradle 에 정의되어있는 정보 가져오기","tags":["gradle","springboot","logging"],"published":true}}},{"node":{"fields":{"slug":"/elasticsearch-with-kakaopage/"},"frontmatter":{"title":"카카오페이지 검색 개발 후기","tags":["kakaopage","elasticsearch","은전한닢"],"published":true}}},{"node":{"fields":{"slug":"/spring-boot-custom-annotation/"},"frontmatter":{"title":"Spring boot Custom Annotation 사용하기","tags":["springboot","annotation","argumentresolver"],"published":true}}},{"node":{"fields":{"slug":"/spring-boot-actuator/"},"frontmatter":{"title":"Spring Boot Actuator 를 이용해 버전 정보 제공하기","tags":["springboot","gradle","spring-boot-actuator"],"published":true}}},{"node":{"fields":{"slug":"/elasticsearch-rest-client/"},"frontmatter":{"title":"Spring-boot 에서 Elasticsearch java rest client 사용하기","tags":["springboot","elasticsearch","restclient","javaclient","transportlyer"],"published":true}}},{"node":{"fields":{"slug":"/spring-boot-jsp/"},"frontmatter":{"title":"spring boot 에서 jsp view 만들기 (feat freemarker)","tags":["springboot","jsp","freemarker","gradle"],"published":true}}},{"node":{"fields":{"slug":"/django-orm-standalone/"},"frontmatter":{"title":"Django orm standalone feat(docker)","tags":["python","django","orm","docker"],"published":true}}},{"node":{"fields":{"slug":"/django-sso/"},"frontmatter":{"title":"Django에서 SSO하기","tags":["django","sso"],"published":true}}},{"node":{"fields":{"slug":"/django-ajax/"},"frontmatter":{"title":"Django에서 ajax요청하기","tags":["django","ajax"],"published":true}}},{"node":{"fields":{"slug":"/store-inapp-in-python/"},"frontmatter":{"title":"Python에서 iOS, Android 스토어 인앱 결제 검증하기","tags":["python","ios","android","inapp"],"published":true}}}]}}}}}}